name: A3_CICD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/aps-a3

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      MLFLOW_TRACKING_URI: ${{ secrets.MLFLOW_TRACKING_URI }}
      MLFLOW_TRACKING_USERNAME: ${{ secrets.MLFLOW_TRACKING_USERNAME }}
      MLFLOW_TRACKING_PASSWORD: ${{ secrets.MLFLOW_TRACKING_PASSWORD }}
      MODEL_URI: ${{ secrets.MODEL_URI }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install deps
        run: |
          pip install -r requirements.txt
          pip show mlflow || pip install mlflow
          pip show pytest || pip install pytest

      - name: Run unit tests
        run: pytest -q

  build_push:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.settag.outputs.image_tag }}

    steps:
      - uses: actions/checkout@v4

      - name: Set tag
        id: settag
        run: echo "image_tag=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: ./app
          file: app/a3.Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.settag.outputs.image_tag }}
            ${{ env.IMAGE_NAME }}:latest

  deploy:
    needs: build_push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy on remote via bastion
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.DEPLOY_KEY }}
          proxy_host: ${{ secrets.PROXY_HOST }}
          proxy_username: ${{ secrets.PROXY_USER }}
          proxy_key: ${{ secrets.PROXY_KEY }}
          script_stop: true
          script: |
            set -e
            APP_DIR=/srv/a3
            IMAGE="${{ env.IMAGE_NAME }}:${{ needs.build_push.outputs.image_tag }}"

            sudo mkdir -p "$APP_DIR"
            cd "$APP_DIR"

            # สร้าง docker-compose.yml ทุกครั้งเพื่อความแน่นอน
            cat > docker-compose.yml <<'YML'
            services:
              web:
                image: IMAGE_PLACEHOLDER
                restart: unless-stopped
                environment:
                  - PORT=8000
                  - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
                  - MLFLOW_TRACKING_USERNAME=${MLFLOW_TRACKING_USERNAME}
                  - MLFLOW_TRACKING_PASSWORD=${MLFLOW_TRACKING_PASSWORD}
                  - MODEL_URI=${MODEL_URI}
                command: >
                  gunicorn -w 2 -k gthread --threads 4 -t 120
                  app.code.app:server --bind 0.0.0.0:8000
                networks:
                  - default
                  - traefik_default
                labels:
                  - "traefik.enable=true"
                  - "traefik.http.services.a3-student.loadbalancer.server.port=8000"
                  - "traefik.http.routers.a3-student.rule=Host(`A3_SUBDOMAIN_PLACEHOLDER`)"
                  - "traefik.http.routers.a3-student.entrypoints=websecure"
                  - "traefik.http.routers.a3-student.tls=true"
                  - "traefik.http.routers.a3-student.tls.certresolver=production"

            networks:
              traefik_default:
                external: true
            YML

            # แทนค่าภาพ และโดเมน
            sed -i "s|IMAGE_PLACEHOLDER|$IMAGE|g" docker-compose.yml
            sed -i "s|A3_SUBDOMAIN_PLACEHOLDER|${{ secrets.A3_SUBDOMAIN }}|g" docker-compose.yml

            # .env สำหรับค่า MLflow & MODEL_URI
            cat > .env <<'ENVV'
            MLFLOW_TRACKING_URI=${{ secrets.MLFLOW_TRACKING_URI }}
            MLFLOW_TRACKING_USERNAME=${{ secrets.MLFLOW_TRACKING_USERNAME }}
            MLFLOW_TRACKING_PASSWORD=${{ secrets.MLFLOW_TRACKING_PASSWORD }}
            MODEL_URI=${{ secrets.MODEL_URI }}
            ENVV

            # เผื่อยังไม่มี network ของ traefik
            docker network create traefik_default || true

            # deploy
            docker compose pull
            docker compose up -d

            # health check คร่าวๆ
            docker compose ps




